// git init

initalize the git repo

// git clone <url>

it will clone repo from git

// git status

it will show the untracked (new file) and tracked (existing file) changes of repo

// git add <file_name>

it will add given file

// git add --all
it will add all tracked and untracked file

// git commit -m "<msg>"

it will commit the added changes

// git push <remote_name> <branch_name>

it will push the given branch and remote name means origin

// git log

it show the hierarchy of git commits

// git log --graph

it shows the hierarchy of git commits with graph

// git fetch <remote_name> <branch_name>

it fetch the remote branch from Github.

// git branch <branch_name> FETCH_HEAD

// After fetching the branch we need to fetch the head of given branch

// git pull origin main --rebase

it will rebase the changes given in main branch

// git rebase --continue

it is use while rebasing our code with feature and main branch

// git rebase --skip

it is used when you are doing rebase and getting conlict. After resolving conflict when u add that 
file the on git status on changes are showing in green then do "git rebase --skip"

// git rebase --abort
it is used when you want to abort(Stop) rebase

// git clean -fx <file_name>
// remove untracked  file from git status

// git restore <file-name>
it will restore the changes of file to origin format

// git commit --amend -m "<msg>"
it will rename the last commited message

